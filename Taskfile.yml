# florist/Taskfile (see https://taskfile.dev)

version: '3'

vars:
  GOTESTSUM_VERSION: v1.8.2

tasks:
  build:
    desc: Build all
    cmds:
      - go build ./...
      - task: build:example

  build:example:
    desc: Build the example
    cmds:
      - go build -o bin/example-florist ./example
      - GOOS=linux go build -o bin/linux/example-florist ./example

  test:all:
    desc: Run all the unit tests; makes sense only if invoking from the VM.
    cmds:
      - gotestsum -- -count=1 -coverprofile=./bin/cover.out ./...

  test:all:vm:clean:
    desc: Run all the tests on a VM from a clean snapshot
    cmds:
      - task: _vm:restore
      - task: test:all:vm:dirty

  test:all:vm:dirty:
    desc: Run all the tests on a VM on the current snapshot (thus dirty) (faster but inaccurate and flaky)
    cmds:
      - task: _vm:set_date
      - ssh -F ssh.config.vagrant florist-dev "cd florist && sudo task test:all"

  _vm:set_date:
    cmds:
      - ssh -F ssh.config.vagrant florist-dev sudo sntp --step 0.pool.ntp.org

  browser:
    desc: "Show code coverage in browser (usage: task test:<subtarget> browser)"
    cmds:
      - go tool cover -html=./bin/cover.out

  clean:
    desc: Remove the build artifacts
    cmds:
      - rm -rf bin

  vm:init:
    desc: Create a VM from scratch, provision and take a snapshot. Use `vm:restore` to restore the snapshot to pristine state.
    cmds:
    - task: build:example
    - vagrant destroy --force
    - vagrant up
    # Generate a SSH configuration file
    - vagrant ssh-config > ssh.config.vagrant
    # For some reasons, vagrant adds "LogLevel FATAL" to the generated file.
    # We want the default logging level instead.
    - sed -i "" 's/LogLevel FATAL//' ssh.config.vagrant
    # Mark this VM as a target for destructive tests.
    - ssh -F ssh.config.vagrant florist-dev sudo mkdir -p /opt/florist/disposable
    # Provision the dev flower ðŸŒ¼
    - ssh -F ssh.config.vagrant florist-dev sudo "./florist/bin/linux/example-florist install dev"
    # Install other deps. I am unsure this is the best approach...
    - ssh -F ssh.config.vagrant florist-dev "GOBIN=/usr/local/bin sudo --preserve-env=GOBIN task -d florist install-deps"
      # Take snapshot, name `pristine`
    - vagrant snapshot save pristine
    - vagrant halt

  vm:restore:
    desc: Restore the VM snapshot to pristine state and set the current date
    cmds:
      - task: _vm:restore
      - task: _vm:set_date

  _vm:restore:
    cmds:
      - vagrant snapshot restore pristine

  install-deps:
    desc: Install tool dependencies.
    cmds:
      - go install gotest.tools/gotestsum@{{.GOTESTSUM_VERSION}}
